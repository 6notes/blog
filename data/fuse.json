{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title","getFn":null},{"path":["body"],"id":"body","weight":1,"src":"body","getFn":null}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"Root","n":1},"1":{"v":"\n# 6notes' Blog\n\n## 2023.05.06 - Fixing address bar blocking mobile sites in Safari\n\n![[blog.coding.mobile.fixAddressBarBlock#Problem,1:#*]]\n\n## 2023.04.23 - Twine/Tweego and GitHub Pages Setup\n\n![[blog.writing.twine.setup#setup,1:#*]]\n\n## 2023.04.10 - Creating the Dendron Frontmattter Generator App\n\n![[blog.coding.dendronFrontmatter#Summary,1:#*]]\n","n":0.189}}},{"i":2,"$":{"0":{"v":"Blog","n":1},"1":{"v":"\n# Blog\n\nThe homepage (root node) is not accessible from the sidebar so I'm using this\npage to redirect back to it. The home page contains links to recent blog posts.\n\n## Homepage\n\n![[root]]\n","n":0.183}}},{"i":3,"$":{"0":{"v":"Writing","n":1}}},{"i":4,"$":{"0":{"v":"Twine","n":1},"1":{"v":"\n# Twine\n\nA collection of notes and guides I've made on Twine.\n[\"Twine is an open-source tool for telling interactive, nonlinear stories.\"](https://twinery.org/)\n","n":0.224}}},{"i":5,"$":{"0":{"v":"Twine/Tweego and GitHub Pages Setup","n":0.447},"1":{"v":"\n# Demo\n\n- [Repo](https://github.com/6notes/tweeExample)\n- [Website](https://6notes.github.io/tweeExample/)\n\n# Setup\n\nI will be following\n[Emilia's tutorial](https://dev.to/lazerwalker/a-modern-developer-s-workflow-for-twine-4imp)\non how to set up the Twine workflow. I will likely add some modifications as\nwell.\n\n# Assumptions\n\n- You already have git installed and know how to use git.\n- You have `brew` installed and are using MacOS for the installation related\n  steps.\n\n# Rough steps for Twine/Tweego and GitHub Pages setup\n\n## Testing locally\n\n- Download the Tweego binary\n- Try the Tweego binary on an example `.twee` file\n\n## Setting up a repo with GitHub Pages\n\n- Create the new git repo.\n- Make the passage `.twee` files.\n- Copy the story formats to your repo from your local Tweego install.\n- Set up the workflow action.\n\n# Local Tweego installation\n\n- Install\n  [Tweego with Homebrew](https://github.com/potatodiet/homebrew-tweego#how-to-use).\n  ```{bash}\n  brew tap potato-diet/tweego\n  brew install tweego\n  ```\n- Use `tweego -v` to check that it's installed properly.\n- It should be installed in `/usr/local/Cellar`.\n  - This is where you can find the story formats.\n- [Tweego installation for Windows](https://github.com/ChapelR/tweego-setup/blob/tweego-2/docs/installing-tweego.md)\n\n# Tweego usage\n\n- Example `.twee` file from Emilia's A Modern Developer's Workflow For Twine\n\n  ```{twee}\n  ::StoryData\n  {\n      \"ifid\": \"F2277A49-95C9-4B14-AE66-62526089F861\",\n      \"format\": \"Harlowe\",\n      \"format-version\": \"3.1.0\",\n      \"start\": \"Start\"\n  }\n\n  ::StoryTitle\n  My test story!\n\n  :: Start\n  This is the first passage in a Twine game!\n\n  [[This is a link|Next Passage]]\n\n  :: Next Passage\n  The player just clicked a link to get here!\n  ```\n\n- Testing Tweego output:\n  - Change directories to where you want to output the html file.\n  - Create the example `.twee` file. Let's say we name it as `test.twee`.\n  - Add the example contents above into the `test.twee` file.\n  - Create the html output by using `tweego test.twee -o example.html`.\n    - The `-o` argument is for the output file name according to\n      [the docs](http://www.motoslave.net/tweego/docs/).\n      - `-o FILE`\n- According to the docs, it looks like Tweego will use all `.twee` files within\n  a specified directory. You can use this to split the passages into different\n  files.\n\n# CI/CD Github Actions\n\n- I think the `${{ secrets.GITHUB_TOKEN }}` is supplied by the GitHub Actions\n  bot so you don't need to add any repository secrets.\n- I added the `dist/index.html` output path into repo variables.\n  - Go to `Settings -> Actions -> General -> Workflow permissions` and:\n    - turn on 'Allow GitHub Actions to create and approve pull requests'\n    - select the 'Read and write permissions' option\n  - Go to `Settings -> Secrets and variables -> Actions` and create these\n    repository variables:\n    - `OUTPUT_DIRECTORY` with the value of `dist`.\n    - `OUTPUT_FILENAME` with the value of `index.html`.\n  - Go to `Settings -> Pages -> Build and deployment` and change the branch to\n    `pages` or whatever your `publish_branch` is in your workflow action\n    `peaceiris/actions-gh-pages@v3` section.\n  - [Repo variables are in the `vars` context according to `mbaum0`](https://github.com/orgs/community/discussions/42133#discussioncomment-4501954).\n\n## Notes\n\n- I've been having trouble with trying Go v1.17.x. I think it's because the\n  Tweego repo hasn't been updated to be compatible with that version of Go;\n  trying the simple suggested fixes like choosing the latest version or\n  specifying a version, or specifying the version listed in\n  [`go.mod`](https://github.com/tmedwards/tweego/blob/master/go.mod). I think\n  it's best to just stick with v1.13.x.\n\n# Testing changes locally\n\n- You can use `mkdir -p ./dist && tweego -o ./dist/index.html ./passages` then\n  open the `index.html` file to view your changes.\n- You'll probably want a `.gitignore` file with `dist/` inside to avoid\n  uploading the `dist/` directory to GitHub as the workflow action will build it\n  anyways and use the newly built `.html` file.\n\n# Resources\n\n- [Tutorial on multiple `.twee` file compiling with Tweego](https://idrellegames.tumblr.com/post/674326647526260736/a-quick-guide-to-using-tweego)\n- [A Modern Developer's Workflow For Twine by Em Lazer-Walker](https://dev.to/lazerwalker/a-modern-developer-s-workflow-for-twine-4imp)\n- [Using Tweego and VSCode by `JoshuaGrams`](https://github.com/JoshuaGrams/tiny-qbn/blob/master/doc/tweego.md)\n\n# Further areas to explore\n\n- TypeScript\n- Importing functions between passages?\n- UI\n  - Adding UI like health bars or tabs\n  - Adding background images\n    - AI generated background images based on description text? Could just be\n      low resolution if too intensive.\n- Adding music/sound effects\n- Creating an inventory system; I expect it to be an Object.\n  - Story passage that is gated by items.\n- Story passage transitions. Like maybe smoke effects before revealing the text.\n","n":0.039}}},{"i":6,"$":{"0":{"v":"Coding","n":1}}},{"i":7,"$":{"0":{"v":"React","n":1}}},{"i":8,"$":{"0":{"v":"Hooks","n":1}}},{"i":9,"$":{"0":{"v":"Hooks","n":1},"1":{"v":"\n# (WIP) Notes\n\n- It seems like hooks are refactored logic that contains states and other React\n  specific parts inside. The nice part is that states are isolated inside. I\n  imagine this would be useful if you see that you have similar states in\n  multiple functions that are being manipulated in the same way; you could\n  refactor them into hooks.\n\n# Resources\n\n- [React docs on hooks](https://reactjs.org/docs/hooks-custom.html)\n","n":0.125}}},{"i":10,"$":{"0":{"v":"Mobile","n":1}}},{"i":11,"$":{"0":{"v":"fixAddressBarBlock","n":1},"1":{"v":"\n# Problem\n\nYou're building a website with a `100vh` style but when you try it on the mobile\nversion of Safari, the bottom address bar blocks the rest of your website.\n\n# Solution\n\n- Use `svh` (small viewport height) or `dvh` (dynamic viewport height) instead\n  of just `vh`\n- [Webkit 15.4 patch notes](https://webkit.org/blog/12445/new-webkit-features-in-safari-15-4/#solving-pain-points)\n- ![](/assets/images/newViewportUnits.png)\n","n":0.143}}},{"i":12,"$":{"0":{"v":"GitHub","n":1}}},{"i":13,"$":{"0":{"v":"pushSettings","n":1},"1":{"v":"\n# (WIP) Changing `git push` settings to be less tedious\n\n- I think the default `git push` settings are annoying because you always have\n  to specify the origin or upstream stuff.\n  - I think if you set `default = current` under `[push]` in your global\n    `.gitconfig` file, you can just git push to whatever your current repo's\n    branch is. I think it's more convenient and haven't run into any problems\n    yet.\n\n# Resources\n\n- [`git push` documentation that explains the different `push.default` settings](https://git-scm.com/docs/git-push#_configuration)\n","n":0.112}}},{"i":14,"$":{"0":{"v":"multiSSH","n":1},"1":{"v":"\n# Summary\n\nYou have a private repo and you want to publish a portion of it without having\nto manually copy files between repos.\n\n# Outline\n\n- Set up the repos and accounts\n- Set up multiple ssh\n- Set up the Github pushing with rsync\n\n# Using git with multiple ssh keys and multiple accounts\n\n- Situation: You want to commit to two different repos with two different\n  accounts.\n- You can do this by:\n  - Generating SSH keys for both accounts.\n    - Make sure you don't have a `*` host because it will override the others.\n  - Register the public keys for their respective GitHub accounts.\n  - [Setup `~/.ssh/config`](https://stackoverflow.com/a/69580744) so that each\n    account/GitHub host has its own ssh file.\n  - Setup the git origin to have the modified host so that it uses your\n    corresponding ssh key.\n  - Clone the repos.\n  - In each repo, use `git config`s to set the user name and email.\n\n# SSH keys\n\n- If you have\n  [a generic `*` host](https://gist.github.com/jexchan/2351996?permalink_comment_id=4286595#gistcomment-4286595),\n  you'll need to make it un-generic. This is because regardless of all of your\n  settings, having a generic host will supercede everything.\n- For notation, I will use `{variable}` to denote variable names.\n  - Say you have `url = git@github.com:{workplaceName}/{workRepo}.git` in\n    `{workRepo}/.git/config`. If `workplaceName = 'bar'; workRepo = 'chair'`,\n    then the url would look like `url = git@github.com:bar/chair.git` and it\n    would be in `bar/.git/config`)\n- Say you have a cloned work repo with\n  `url = git@github.com:{workplaceName}/{workRepo}.git` in\n  `{workRepo}/.git/config`, you have another cloned personal repo with\n  `url = git@github.com:{personal}/{personalRepo}.git` in\n  `{personalRepo}/.git/config`, and a `~/.ssh/config` file with:\n\n  ```{ssh config}\n  # Work/All purpose\n  Host *\n    AddKeysToAgent yes\n    UseKeychain yes\n    IdentityFile ~/.ssh/id_rsa\n\n  # Personal\n  Host github.com-personal\n    HostName github.com\n    User git\n    IdentityFile ~/.ssh/id_rsa_personal\n  ```\n\n  The default ssh keys for both the work and personal repos will be the work ssh\n  key because the `*` host setting takes priority over all of the other hosts.\n\n- Here's what you can do to fix this:\n\n  - Modify the `*` host:\n    - Change the host to `work`.\n    - Add `User git`.\n    - Possibly optional: Add `IdentitiesOnly yes`\n  - Modify `workRepo/.git/config`:\n    - Change the url to `work:workplaceName/workplaceName.git`.\n  - Possibly optional: Modify the `github.com-personal` host:\n    - Add `IdentitiesOnly yes`\n  - Modify `personalRepo/.git/config`:\n    - Change the url to `git@github.com-personal:personalName/personalRepo.git`\n  - The updated config file should look like this:\n\n  ```{ssh config}\n  Host work\n    HostName github.com\n    User git\n    AddKeysToAgent yes\n    UseKeychain yes\n    IdentityFile ~/.ssh/id_rsa\n    IdentitiesOnly yes\n\n  Host github.com-personal\n    HostName github.com\n    User git\n    IdentityFile ~/.ssh/id_rsa_personal\n    IdentitiesOnly yes\n  ```\n\n- You can verify that the ssh keys are set up properly by doing the following:\n  - Use `ssh -T {Host}` for both hosts.\n    - You can use `ssh -vT {Host}` instead for a more verbose message for\n      debugging.\n    - You should get something like: `Hi {sshName}! You've successfully ...`,\n      and the ssh names should be different between the repos.\n\n# Git configuration\n\n- Once you're done fixing the ssh keys, you'll have to configure the remote URL\n  for git and the user name and email for the repo you're working with. By\n  default you will be making commits with the user/email in your global\n  `gitconfig`, but you can override this in a specific repo with the following:\n  - `git config user.name \"Your Name Here\"`\n  - `git config user.email your@email.com`\n  - Use the following to update your git origin remote URL:\n    - `git remote add origin git@{personalHost}:{personal}/{personalRepo}.git`\n    - `git remote -v`\n  - Make local commit to both repos then use `git log` to verify:\n    - Make a small change to a file.\n    - Do a `git add`.\n    - Do a `git commit`.\n    - Do `git log` and check that the author name.\n    - Do `git reset HEAD~1` to undo the local commit you just made.\n    - Undo the small change you made to the file.\n    - You should get different author names between the two repos.\n- In the future, you can set the `url` in the repo's git config file by\n  modifying the git clone text that GitHub provides.\n  - Say the text is `git@github.com:{personal}/{personalRepo}.git`. You can\n    modify the text to `git@github.com-personal:{personal}/{personalRepo}.git`\n    where `github.com-personal` corresponds to the `host` of the ssh key you\n    want to use from your `~/.ssh/config` file.\n    - This will set the `personalRepo/.git/config` file to use the url\n      `git@github.com-personal:{personal}/{personalRepo}.git`.\n\n# Additional notes\n\n- Converting a local vault into a private vault with the Dendron command in\n  Visual Studio didn't entirely work for me, so I think it's best to just\n  convert it manually.\n  - Development of new Dendron features has stopped so it'll probably stay in\n    the same state.\n- Steps I took for configuring which git account to use for commits in a new git\n  repo:\n  - `git init`\n  - `git remote add origin git@{personalHost}:{personal}/{personalRepo}.git`\n  - `git remote -v`\n  - `ssh -T {personalHost}`\n  - `git config user.name \"Your Name Here\"`\n  - `git config user.email your@email.com`\n- [Manual migration of vaults to make them self contained](https://wiki.dendron.so/notes/aikv0yamnfkcowlol7qeldy/#manual-migration-instructions)\n  - I used this to figure out what the `.yml` and workspace files should look\n    like in the vault that I'm publishing.\n  - If you're getting an issue with GitHub Actions being denied, then see\n    [`tdy` on checking permissions if GitHub Actions is being denied](https://stackoverflow.com/a/75308228).\n\n# Resources\n\n- [`k-o-d-r` discussing how to use an alias for git cloning](https://gist.github.com/jexchan/2351996?permalink_comment_id=3495142#gistcomment-3495142)\n- [`troccoli` discussing how the generic `*` host supercedes all of the other ssh keys](https://gist.github.com/jexchan/2351996?permalink_comment_id=4286595#gistcomment-4286595)\n- [`alejandro-martin` discussing setting up two ssh's with the same website (GitHub) ](https://gist.github.com/alejandro-martin/aabe88cf15871121e076f66b65306610#using-two-accounts-from-the-same-server-website-optional)\n- [`oanhnn` discussing how to test your ssh key connection](https://gist.github.com/oanhnn/80a89405ab9023894df7)\n- [`Sharadh` discussing how to use the verbose version of `ssh -T`](https://stackoverflow.com/a/23730614)\n- [`mikemaccana` on setting git remote](https://stackoverflow.com/a/11251797)\n- [`Peter Mortensen` on how to list git remote URLs](https://stackoverflow.com/a/10183740)\n- [`tdy` on checking permissions if GitHub Actions is being denied](https://stackoverflow.com/a/75308228)\n- [Guide to deploying to GitHub Pages normally](https://wiki.dendron.so/notes/FnK2ws6w1uaS1YzBUY3BR/)\n","n":0.033}}},{"i":15,"$":{"0":{"v":"chakraUi","n":1}}},{"i":16,"$":{"0":{"v":"props","n":1},"1":{"v":"\n# The number sizes in props\n\n- There are number sizes in the style props that can be used instead of pixel\n  size. For example:\n\n  ```\n  function example1(){\n    return <Box height={6}>\n  }\n  function example2(){\n    return <Box height={\"60px\"}>\n  }\n  ```\n\n- In\n  [the docs for default theming](https://chakra-ui.com/docs/styled-system/theme#spacing),\n  they explain what the numbers mean. For example, `0.5` refers to `'0.125rem'`.\n","n":0.134}}},{"i":17,"$":{"0":{"v":"dendronFrontmatter","n":1},"1":{"v":"\n# Summary\n\nI explore how I figured out Dendron's frontmatter format to make valid Dendron\nnotes on mobile. I also go over some roadbumps I encountered along the way. The\nresulting\n[Dendron Frontmatter Generator app](https://6notes.github.io/dendronFrontmatterGen/)\ncan be used offline.\n\n# Outline\n\n- [Summary](#summary)\n- [Outline](#outline)\n- [Dendron's frontmatter `id`](#dendrons-frontmatter-id)\n- [Dendron's frontmatter `created`/`updated`](#dendrons-frontmatter-createdupdated)\n- [Creating an app to use on mobile](#creating-an-app-to-use-on-mobile)\n  - [Images not showing up on GitHub Pages](#images-not-showing-up-on-github-pages)\n  - [Favicon not showing up on mobile](#favicon-not-showing-up-on-mobile)\n  - [Editor isn't editable](#editor-isnt-editable)\n\n# Dendron's frontmatter `id`\n\nThis took a while to find. I think the crucial hint was finding\n[Dendron Doctor's `fixFrontmatter` command](https://wiki.dendron.so/notes/ZeC74FYVECsf9bpyngVMU/#fixfrontmatter).\nIn VSCode, if you pull up the Dendron commands, you can pick `Doctor` which\nleads to a new set of commands. You'll find the `fixFrontmatter` doctor command.\n\nFrom here you search `fixFrontmatter` on the\n[Dendron GitHub Repo](https://github.com/dendronhq/dendron/search?q=fixFrontmatter),\nwhich leads you to the `FIX_FRONTMATTER` enum key, which leads to\n[the Doctor.ts file](https://github.com/dendronhq/dendron/blob/8c7322ce5cea9e31eae057c08a90b4e788e8c542/packages/plugin-core/src/commands/Doctor.ts),\nthen to\n[the Backfill line](https://github.com/dendronhq/dendron/blob/8c7322ce5cea9e31eae057c08a90b4e788e8c542/packages/plugin-core/src/commands/Doctor.ts#L511).\nIn the\n[BackfillService file](https://github.com/dendronhq/dendron/blob/e3dbc9eac5872ef6811b73a1f16baae5fd77dc0a/packages/engine-server/src/backfillV2/service.ts#L15),\nyou'll find that it edits the frontmatter id with `genUUID`.\n[Searching for `genUUID`](https://github.com/dendronhq/dendron/search?q=genUUID)\neventually leads you to\n[the uuid file](https://github.com/dendronhq/dendron/blob/9e93cb79448867bbe915a90069dfdd8c1357807d/packages/common-all/src/uuid.ts)\nwhich shows that nanoid is used to generate the id.\n\n# Dendron's frontmatter `created`/`updated`\n\nThis was mostly trial and error. I had prior knowledge that dates are stored as\nX amount of seconds since a past date, and this format looked similar. It ended\nup being `new Date().valueOf()`. I wasn't able to find this in the repo to\nverify, but they do look the same and are in the same ballpark. If you find the\ndifference between the `updated` value when you save now, and\n`new Date().valueOf()` in your browser console, the values will be pretty close.\n\n# Creating an app to use on mobile\n\nGoing into this, I wanted these features:\n\n- Offline capability which likely meant making a progressive web app (PWA).\n- Easy and quick to use, which means being able to load the app and just copy\n  the frontmatter to the clipboard.\n\nThe main benefit I wanted from using a progressive web app was\n[network independence](https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps)\nas I wanted to be able to use the app without being connected to wifi.\n\nI used both\n[Melvin George's How to make a quick PWA tutorial](https://melvingeorge.me/blog/nextjs-pwa)\nand\n[Bigyan Poudel's How to make a quick PWA tutorial](https://articles.wesionary.team/pwa-with-next-js-6073f07a0b26).\nThe tutorial required favicons so I used\n[DALL-E 2](https://openai.com/product/dall-e-2) to generate a generic icon.\nAfterwards, I generated favicons with\n[Real Favicon Generator](https://realfavicongenerator.net/) to make a NextJS\nPWA. To host the website, I used\n[Rizèl Scarlett's tutorial on how to host a Hugo or Next.js site on GitHub Pages](https://dev.to/github/how-to-host-a-static-nextjs-site-on-github-pages-4pe0).\n\n## Images not showing up on GitHub Pages\n\n- To make my images show up properly on GitHub Pages, I had to change the image\n  paths to be relative.\n- For example: `src=\"/images/next.svg\"` to `src=\"./images/next.svg\"`.\n\n## Favicon not showing up on mobile\n\n- The main fix I did was renaming the `manifest.json` file to\n  `site.webmanifest`.\n\n## Editor isn't editable\n\n- If you have a line like\n  `isDisabled={editor.can().chain().focus().undo().blur().run()}` somewhere in\n  your TipTap editor code, it can cause the editor to blur every time you click\n  it. You can solve this by removing `blur()` from the condition.\n","n":0.047}}},{"i":18,"$":{"0":{"v":"Tips","n":1},"1":{"v":"\n# Summary\n\n- These are notes to remind me what my workflow is when writing my blog.\n\n# Workflow\n\n- Create new topic/blog post in the blog vault under the blog node.\n- Add the post to the root page.\n\n  - Format should be:\n\n  ```{markdown}\n  ## YYYY.MM.DD - Title\n\n  ![[dendron.path#firstHeader,1:#*]]\n  ```\n\n  - Example:\n\n  ```{markdown}\n  ## 2023.04.08 - Twine setup (WIP)\n\n  ![[blog.guides.twine.setup#setup,1:#*]]\n  ```\n\n  - I think the `#firstHeader,1:#*` part means from the first header to the next\n    header.\n  - This was used for\n    [the user guide page in Dendron's docs](https://github.com/dendronhq/dendron-site/blob/master/vault/dendron.user-guide.md#basics).\n\n- Push to repo.\n\n# Todo\n\n- Add workflow for mobile.\n- For mobile, use\n  [the frontmatter generator](https://github.com/6notes/dendronFrontmatterGen)\n  to add the frontmatter to the top of the note.\n- When we have more notes, we should consider:\n  - Separating the notes by year then month with headers\n    - Not sure how this works with the right sidebar. I think it's just a flat\n      list of all headers.\n    - Can also adding year category notes into the sidebar. For example, we\n      could just have a `2022` node that's just a list of preview links like the\n      homepage.\n  - Hiding the blog posts older than the recent ten by using `<details>`\n  - Removing older blog posts from the homepage, maybe only show the most recent\n    10 blog posts\n    - Not a big fan of this idea, should probably try the other methods first.\n","n":0.067}}}]}
